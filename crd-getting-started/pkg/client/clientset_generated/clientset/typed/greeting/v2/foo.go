// Code generated by client-gen. DO NOT EDIT.

package v2

import (
	context "context"

	greetingv2 "github.com/foenye/cloud-native-tour/crd-getting-started/pkg/apis/greeting/v2"
	scheme "github.com/foenye/cloud-native-tour/crd-getting-started/pkg/client/clientset_generated/clientset/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// FoosGetter has a method to return a FooInterface.
// A group's client should implement this interface.
type FoosGetter interface {
	Foos(namespace string) FooInterface
}

// FooInterface has methods to work with Foo resources.
type FooInterface interface {
	Create(ctx context.Context, foo *greetingv2.Foo, opts v1.CreateOptions) (*greetingv2.Foo, error)
	Update(ctx context.Context, foo *greetingv2.Foo, opts v1.UpdateOptions) (*greetingv2.Foo, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, foo *greetingv2.Foo, opts v1.UpdateOptions) (*greetingv2.Foo, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*greetingv2.Foo, error)
	List(ctx context.Context, opts v1.ListOptions) (*greetingv2.FooList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *greetingv2.Foo, err error)
	FooExpansion
}

// foos implements FooInterface
type foos struct {
	*gentype.ClientWithList[*greetingv2.Foo, *greetingv2.FooList]
}

// newFoos returns a Foos
func newFoos(c *GreetingV2Client, namespace string) *foos {
	return &foos{
		gentype.NewClientWithList[*greetingv2.Foo, *greetingv2.FooList](
			"foos",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *greetingv2.Foo { return &greetingv2.Foo{} },
			func() *greetingv2.FooList { return &greetingv2.FooList{} },
			gentype.PrefersProtobuf[*greetingv2.Foo](),
		),
	}
}
