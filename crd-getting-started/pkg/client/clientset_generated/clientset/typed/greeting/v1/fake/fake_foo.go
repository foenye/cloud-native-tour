// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/foenye/cloud-native-tour/crd-getting-started/pkg/apis/greeting/v1"
	greetingv1 "github.com/foenye/cloud-native-tour/crd-getting-started/pkg/client/clientset_generated/clientset/typed/greeting/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeFoos implements FooInterface
type fakeFoos struct {
	*gentype.FakeClientWithList[*v1.Foo, *v1.FooList]
	Fake *FakeGreetingV1
}

func newFakeFoos(fake *FakeGreetingV1, namespace string) greetingv1.FooInterface {
	return &fakeFoos{
		gentype.NewFakeClientWithList[*v1.Foo, *v1.FooList](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("foos"),
			v1.SchemeGroupVersion.WithKind("Foo"),
			func() *v1.Foo { return &v1.Foo{} },
			func() *v1.FooList { return &v1.FooList{} },
			func(dst, src *v1.FooList) { dst.ListMeta = src.ListMeta },
			func(list *v1.FooList) []*v1.Foo { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.FooList, items []*v1.Foo) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
