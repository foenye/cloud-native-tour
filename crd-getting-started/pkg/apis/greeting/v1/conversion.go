package v1

import (
	"github.com/foenye/cloud-native-tour/crd-getting-started/pkg/apis/greeting"
	"k8s.io/apimachinery/pkg/conversion"
)

// Convert_greeting_Foo_To_v1_Foo
//
//goland:noinspection GoSnakeCaseUsage
func Convert_greeting_Foo_To_v1_Foo(in *greeting.Foo, out *Foo, s conversion.Scope) error {
	// call func generated by conversion-gen
	// autoConvert_greeting_Foo_To_v1_Foo will call Convert_greeting_FooSpec_To_v1_FooSpec
	if err := autoConvert_greeting_Foo_To_v1_Foo(in, out, s); err != nil {
		return err
	}
	// do conversion here
	if out.Annotations == nil {
		out.Annotations = map[string]string{}
	}
	out.Annotations[AnnotationImage] = in.Spec.Image
	return nil
}

// Convert_v1_Foo_To_greeting_Foo
//
//goland:noinspection GoSnakeCaseUsage
func Convert_v1_Foo_To_greeting_Foo(in *Foo, out *greeting.Foo, s conversion.Scope) error {
	// call func generated by conversion-gen
	// autoConvert_v1_Foo_To_greeting_Foo will call Convert_v1_FooSpec_To_greeting_FooSpec
	if err := autoConvert_v1_Foo_To_greeting_Foo(in, out, s); err != nil {
		return err
	}
	// do conversion here
	out.Spec.Image = in.Annotations[AnnotationImage]
	return nil
}

// Convert_greeting_FooSpec_To_v1_FooSpec
//
//goland:noinspection GoSnakeCaseUsage
func Convert_greeting_FooSpec_To_v1_FooSpec(in *greeting.FooSpec, out *FooSpec, _ conversion.Scope) error {
	out.Message = in.Config.Message
	out.Description = in.Config.Description
	return nil
}

// Convert_v1_FooSpec_To_greeting_FooSpec
//
//goland:noinspection GoSnakeCaseUsage
func Convert_v1_FooSpec_To_greeting_FooSpec(in *FooSpec, out *greeting.FooSpec, _ conversion.Scope) error {
	out.Config.Message = in.Message
	out.Config.Description = in.Description
	return nil
}
