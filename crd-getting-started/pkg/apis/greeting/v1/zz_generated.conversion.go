//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	greeting "github.com/foenye/cloud-native-tour/crd-getting-started/pkg/apis/greeting"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*FooList)(nil), (*greeting.FooList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_FooList_To_greeting_FooList(a.(*FooList), b.(*greeting.FooList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*greeting.FooList)(nil), (*FooList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_greeting_FooList_To_v1_FooList(a.(*greeting.FooList), b.(*FooList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*greeting.FooSpec)(nil), (*FooSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_greeting_FooSpec_To_v1_FooSpec(a.(*greeting.FooSpec), b.(*FooSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*greeting.Foo)(nil), (*Foo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_greeting_Foo_To_v1_Foo(a.(*greeting.Foo), b.(*Foo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*FooSpec)(nil), (*greeting.FooSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_FooSpec_To_greeting_FooSpec(a.(*FooSpec), b.(*greeting.FooSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*Foo)(nil), (*greeting.Foo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Foo_To_greeting_Foo(a.(*Foo), b.(*greeting.Foo), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_Foo_To_greeting_Foo(in *Foo, out *greeting.Foo, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_FooSpec_To_greeting_FooSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_greeting_Foo_To_v1_Foo(in *greeting.Foo, out *Foo, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_greeting_FooSpec_To_v1_FooSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	// WARNING: in.Status requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1_FooList_To_greeting_FooList(in *FooList, out *greeting.FooList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]greeting.Foo, len(*in))
		for i := range *in {
			if err := Convert_v1_Foo_To_greeting_Foo(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_FooList_To_greeting_FooList is an autogenerated conversion function.
func Convert_v1_FooList_To_greeting_FooList(in *FooList, out *greeting.FooList, s conversion.Scope) error {
	return autoConvert_v1_FooList_To_greeting_FooList(in, out, s)
}

func autoConvert_greeting_FooList_To_v1_FooList(in *greeting.FooList, out *FooList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Foo, len(*in))
		for i := range *in {
			if err := Convert_greeting_Foo_To_v1_Foo(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_greeting_FooList_To_v1_FooList is an autogenerated conversion function.
func Convert_greeting_FooList_To_v1_FooList(in *greeting.FooList, out *FooList, s conversion.Scope) error {
	return autoConvert_greeting_FooList_To_v1_FooList(in, out, s)
}

func autoConvert_v1_FooSpec_To_greeting_FooSpec(in *FooSpec, out *greeting.FooSpec, s conversion.Scope) error {
	// WARNING: in.Message requires manual conversion: does not exist in peer-type
	// WARNING: in.Description requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_greeting_FooSpec_To_v1_FooSpec(in *greeting.FooSpec, out *FooSpec, s conversion.Scope) error {
	// WARNING: in.Image requires manual conversion: does not exist in peer-type
	// WARNING: in.Config requires manual conversion: does not exist in peer-type
	return nil
}
